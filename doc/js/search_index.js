var search_data = {"index":{"searchIndex":["activerecord","view","adaptertest","item","module","object","person","person2","place","railssqlviews","connectionadapters","abstractadapter","mappingdefinition","mysql2adapter","mysqladapter","ociadapter","oracleadapter","oracleenhancedadapter","postgresqladapter","sqlserveradapter","sqliteadapter","schemastatements","viewdefinition","loader","schemadumper","schemadumpertest","test","unit","testcase","vperson","vprofile","viewmodeltest","viewoperationstest","alias_method_chain()","assert_dump_and_load_succeed()","base_tables()","base_tables()","base_tables()","based_on()","cleanup()","clone_association()","column()","create_mapping_view()","create_people_view()","create_view()","disable_referential_integrity_with_views_excluded()","drop_table_with_cascade()","drop_view()","dump_with_views()","included()","included()","included()","included()","included()","included()","inherited()","load_extensions()","map_column()","new()","new()","nonview_tables()","nonview_tables()","nonview_tables()","readonly?()","select_cols()","setup()","setup()","structure_dump()","structure_dump()","supports_drop_table_cascade?()","supports_drop_table_cascade?()","supports_view_columns_definition?()","supports_view_columns_definition?()","supports_views?()","supports_views?()","supports_views?()","supports_views?()","supports_views?()","supports_views?()","supports_views?()","supports_views?()","supports_views?()","tables_with_views_excluded()","tables_with_views_included()","tables_with_views_included()","tables_with_views_included()","teardown()","test_access_cloned_belongs_to_association()","test_access_cloned_habtm_association()","test_access_cloned_has_many_association()","test_base_tables()","test_cloned_belongs_to_association_exists()","test_cloned_habtm_association_exists()","test_cloned_has_many_association_exists()","test_columns()","test_create_view()","test_current_database()","test_drop_view()","test_dump_and_load()","test_logging_error()","test_mapped_columns()","test_mapped_views()","test_no_view_raises_error()","test_non_allowed_object_raises_error()","test_old_name_not_found_error_during_mapping()","test_regex_ignore()","test_same_person()","test_supports_views()","test_symbol_ignore()","test_tables()","test_union()","test_view()","test_view_creation_order()","test_view_select_statement()","test_views()","to_sql()","trailer_with_views()","view()","view_cols()","view_select_statement()","view_select_statement()","view_select_statement()","view_select_statement()","view_select_statement()","view_select_statement()","view_select_statement()","view_select_statement()","view_select_statement()","views()","views()","views()","views()","changelog","license","readme","rakefile","todo"],"longSearchIndex":["activerecord","activerecord::view","adaptertest","item","module","object","person","person2","place","railssqlviews","railssqlviews::connectionadapters","railssqlviews::connectionadapters::abstractadapter","railssqlviews::connectionadapters::mappingdefinition","railssqlviews::connectionadapters::mysql2adapter","railssqlviews::connectionadapters::mysqladapter","railssqlviews::connectionadapters::ociadapter","railssqlviews::connectionadapters::oracleadapter","railssqlviews::connectionadapters::oracleenhancedadapter","railssqlviews::connectionadapters::postgresqladapter","railssqlviews::connectionadapters::sqlserveradapter","railssqlviews::connectionadapters::sqliteadapter","railssqlviews::connectionadapters::schemastatements","railssqlviews::connectionadapters::viewdefinition","railssqlviews::loader","railssqlviews::schemadumper","schemadumpertest","test","test::unit","test::unit::testcase","vperson","vprofile","viewmodeltest","viewoperationstest","module#alias_method_chain()","schemadumpertest#assert_dump_and_load_succeed()","railssqlviews::connectionadapters::postgresqladapter#base_tables()","railssqlviews::connectionadapters::sqlserveradapter#base_tables()","railssqlviews::connectionadapters::sqliteadapter#base_tables()","activerecord::view::based_on()","viewmodeltest#cleanup()","activerecord::view::clone_association()","railssqlviews::connectionadapters::viewdefinition#column()","railssqlviews::connectionadapters::schemastatements#create_mapping_view()","test::unit::testcase#create_people_view()","railssqlviews::connectionadapters::schemastatements#create_view()","railssqlviews::connectionadapters::abstractadapter#disable_referential_integrity_with_views_excluded()","railssqlviews::connectionadapters::schemastatements#drop_table_with_cascade()","railssqlviews::connectionadapters::schemastatements#drop_view()","railssqlviews::schemadumper#dump_with_views()","railssqlviews::connectionadapters::abstractadapter::included()","railssqlviews::connectionadapters::mysql2adapter::included()","railssqlviews::connectionadapters::mysqladapter::included()","railssqlviews::connectionadapters::postgresqladapter::included()","railssqlviews::connectionadapters::schemastatements::included()","railssqlviews::schemadumper::included()","object::inherited()","railssqlviews::loader::load_extensions()","railssqlviews::connectionadapters::mappingdefinition#map_column()","railssqlviews::connectionadapters::mappingdefinition::new()","railssqlviews::connectionadapters::viewdefinition::new()","railssqlviews::connectionadapters::postgresqladapter#nonview_tables()","railssqlviews::connectionadapters::sqlserveradapter#nonview_tables()","railssqlviews::connectionadapters::sqliteadapter#nonview_tables()","activerecord::view#readonly?()","railssqlviews::connectionadapters::mappingdefinition#select_cols()","schemadumpertest#setup()","viewmodeltest#setup()","railssqlviews::connectionadapters::mysql2adapter#structure_dump()","railssqlviews::connectionadapters::mysqladapter#structure_dump()","railssqlviews::connectionadapters::abstractadapter#supports_drop_table_cascade?()","railssqlviews::connectionadapters::sqliteadapter#supports_drop_table_cascade?()","railssqlviews::connectionadapters::abstractadapter#supports_view_columns_definition?()","railssqlviews::connectionadapters::sqliteadapter#supports_view_columns_definition?()","railssqlviews::connectionadapters::abstractadapter#supports_views?()","railssqlviews::connectionadapters::mysql2adapter#supports_views?()","railssqlviews::connectionadapters::mysqladapter#supports_views?()","railssqlviews::connectionadapters::ociadapter#supports_views?()","railssqlviews::connectionadapters::oracleadapter#supports_views?()","railssqlviews::connectionadapters::oracleenhancedadapter#supports_views?()","railssqlviews::connectionadapters::postgresqladapter#supports_views?()","railssqlviews::connectionadapters::sqlserveradapter#supports_views?()","railssqlviews::connectionadapters::sqliteadapter#supports_views?()","railssqlviews::schemadumper#tables_with_views_excluded()","railssqlviews::connectionadapters::mysql2adapter#tables_with_views_included()","railssqlviews::connectionadapters::mysqladapter#tables_with_views_included()","railssqlviews::connectionadapters::postgresqladapter#tables_with_views_included()","schemadumpertest#teardown()","viewmodeltest#test_access_cloned_belongs_to_association()","viewmodeltest#test_access_cloned_habtm_association()","viewmodeltest#test_access_cloned_has_many_association()","adaptertest#test_base_tables()","viewmodeltest#test_cloned_belongs_to_association_exists()","viewmodeltest#test_cloned_habtm_association_exists()","viewmodeltest#test_cloned_has_many_association_exists()","adaptertest#test_columns()","viewoperationstest#test_create_view()","adaptertest#test_current_database()","viewoperationstest#test_drop_view()","schemadumpertest#test_dump_and_load()","schemadumpertest#test_logging_error()","adaptertest#test_mapped_columns()","adaptertest#test_mapped_views()","viewoperationstest#test_no_view_raises_error()","schemadumpertest#test_non_allowed_object_raises_error()","adaptertest#test_old_name_not_found_error_during_mapping()","schemadumpertest#test_regex_ignore()","viewmodeltest#test_same_person()","adaptertest#test_supports_views()","schemadumpertest#test_symbol_ignore()","adaptertest#test_tables()","schemadumpertest#test_union()","schemadumpertest#test_view()","schemadumpertest#test_view_creation_order()","adaptertest#test_view_select_statement()","adaptertest#test_views()","railssqlviews::connectionadapters::viewdefinition#to_sql()","railssqlviews::schemadumper#trailer_with_views()","railssqlviews::schemadumper#view()","railssqlviews::connectionadapters::mappingdefinition#view_cols()","railssqlviews::connectionadapters::abstractadapter#view_select_statement()","railssqlviews::connectionadapters::mysql2adapter#view_select_statement()","railssqlviews::connectionadapters::mysqladapter#view_select_statement()","railssqlviews::connectionadapters::ociadapter#view_select_statement()","railssqlviews::connectionadapters::oracleadapter#view_select_statement()","railssqlviews::connectionadapters::oracleenhancedadapter#view_select_statement()","railssqlviews::connectionadapters::postgresqladapter#view_select_statement()","railssqlviews::connectionadapters::sqlserveradapter#view_select_statement()","railssqlviews::connectionadapters::sqliteadapter#view_select_statement()","railssqlviews::connectionadapters::abstractadapter#views()","railssqlviews::connectionadapters::sqlserveradapter#views()","railssqlviews::connectionadapters::sqliteadapter#views()","railssqlviews::schemadumper#views()","","","","",""],"info":[["ActiveRecord","","ActiveRecord.html","",""],["ActiveRecord::View","","ActiveRecord/View.html","",""],["AdapterTest","","AdapterTest.html","",""],["Item","","Item.html","",""],["Module","","Module.html","",""],["Object","","Object.html","",""],["Person","","Person.html","",""],["Person2","","Person2.html","",""],["Place","","Place.html","",""],["RailsSqlViews","","RailsSqlViews.html","",""],["RailsSqlViews::ConnectionAdapters","","RailsSqlViews/ConnectionAdapters.html","",""],["RailsSqlViews::ConnectionAdapters::AbstractAdapter","","RailsSqlViews/ConnectionAdapters/AbstractAdapter.html","",""],["RailsSqlViews::ConnectionAdapters::MappingDefinition","","RailsSqlViews/ConnectionAdapters/MappingDefinition.html","",""],["RailsSqlViews::ConnectionAdapters::Mysql2Adapter","","RailsSqlViews/ConnectionAdapters/Mysql2Adapter.html","",""],["RailsSqlViews::ConnectionAdapters::MysqlAdapter","","RailsSqlViews/ConnectionAdapters/MysqlAdapter.html","",""],["RailsSqlViews::ConnectionAdapters::OciAdapter","","RailsSqlViews/ConnectionAdapters/OciAdapter.html","",""],["RailsSqlViews::ConnectionAdapters::OracleAdapter","","RailsSqlViews/ConnectionAdapters/OracleAdapter.html","",""],["RailsSqlViews::ConnectionAdapters::OracleEnhancedAdapter","","RailsSqlViews/ConnectionAdapters/OracleEnhancedAdapter.html","",""],["RailsSqlViews::ConnectionAdapters::PostgreSQLAdapter","","RailsSqlViews/ConnectionAdapters/PostgreSQLAdapter.html","",""],["RailsSqlViews::ConnectionAdapters::SQLServerAdapter","","RailsSqlViews/ConnectionAdapters/SQLServerAdapter.html","",""],["RailsSqlViews::ConnectionAdapters::SQLiteAdapter","","RailsSqlViews/ConnectionAdapters/SQLiteAdapter.html","",""],["RailsSqlViews::ConnectionAdapters::SchemaStatements","","RailsSqlViews/ConnectionAdapters/SchemaStatements.html","",""],["RailsSqlViews::ConnectionAdapters::ViewDefinition","","RailsSqlViews/ConnectionAdapters/ViewDefinition.html","","<p>Abstract definition of a View\n"],["RailsSqlViews::Loader","","RailsSqlViews/Loader.html","",""],["RailsSqlViews::SchemaDumper","","RailsSqlViews/SchemaDumper.html","",""],["SchemaDumperTest","","SchemaDumperTest.html","",""],["Test","","Test.html","",""],["Test::Unit","","Test/Unit.html","",""],["Test::Unit::TestCase","","Test/Unit/TestCase.html","",""],["VPerson","","VPerson.html","",""],["VProfile","","VProfile.html","",""],["ViewModelTest","","ViewModelTest.html","",""],["ViewOperationsTest","","ViewOperationsTest.html","",""],["alias_method_chain","Module","Module.html#method-i-alias_method_chain","(target, feature)",""],["assert_dump_and_load_succeed","SchemaDumperTest","SchemaDumperTest.html#method-i-assert_dump_and_load_succeed","()",""],["base_tables","RailsSqlViews::ConnectionAdapters::PostgreSQLAdapter","RailsSqlViews/ConnectionAdapters/PostgreSQLAdapter.html#method-i-base_tables","(name = nil)",""],["base_tables","RailsSqlViews::ConnectionAdapters::SQLServerAdapter","RailsSqlViews/ConnectionAdapters/SQLServerAdapter.html#method-i-base_tables","(name = nil)","<p>Get all of the non-view tables from the currently connected schema\n"],["base_tables","RailsSqlViews::ConnectionAdapters::SQLiteAdapter","RailsSqlViews/ConnectionAdapters/SQLiteAdapter.html#method-i-base_tables","(name = nil)",""],["based_on","ActiveRecord::View","ActiveRecord/View.html#method-c-based_on","(model)","<p>Clones all applicable associations from <code>model</code> to this view and\nprovides an instance method <code>to_<em>model</em></code> that …\n"],["cleanup","ViewModelTest","ViewModelTest.html#method-i-cleanup","()",""],["clone_association","ActiveRecord::View","ActiveRecord/View.html#method-c-clone_association","(model, *associations)","<p>Clone one or more associations from <code>model</code> to this view class.\n<p>NOTE: Currently only <code>belongs_to</code>, <code>has_many</code> …\n"],["column","RailsSqlViews::ConnectionAdapters::ViewDefinition","RailsSqlViews/ConnectionAdapters/ViewDefinition.html#method-i-column","(name)",""],["create_mapping_view","RailsSqlViews::ConnectionAdapters::SchemaStatements","RailsSqlViews/ConnectionAdapters/SchemaStatements.html#method-i-create_mapping_view","(old_name, new_name, options = {})","<p>Also creates a view, with the specific purpose of remapping column names to\nmake non-ActiveRecord tables …\n"],["create_people_view","Test::Unit::TestCase","Test/Unit/TestCase.html#method-i-create_people_view","()",""],["create_view","RailsSqlViews::ConnectionAdapters::SchemaStatements","RailsSqlViews/ConnectionAdapters/SchemaStatements.html#method-i-create_view","(name, select_query, options={})","<p>Create a view. The <code>options</code> hash can include the following\nkeys:\n<p>:check_option &mdash; Specify restrictions for …\n\n"],["disable_referential_integrity_with_views_excluded","RailsSqlViews::ConnectionAdapters::AbstractAdapter","RailsSqlViews/ConnectionAdapters/AbstractAdapter.html#method-i-disable_referential_integrity_with_views_excluded","(&block)",""],["drop_table_with_cascade","RailsSqlViews::ConnectionAdapters::SchemaStatements","RailsSqlViews/ConnectionAdapters/SchemaStatements.html#method-i-drop_table_with_cascade","(table_name, options = {})",""],["drop_view","RailsSqlViews::ConnectionAdapters::SchemaStatements","RailsSqlViews/ConnectionAdapters/SchemaStatements.html#method-i-drop_view","(name, options={})","<p>Drop a view. The <code>options</code> hash can include the following keys:\n<p>:drop_behavior &mdash; Specify the drop behavior. …\n\n"],["dump_with_views","RailsSqlViews::SchemaDumper","RailsSqlViews/SchemaDumper.html#method-i-dump_with_views","(stream)","<p>Add views to the end of the dump stream\n"],["included","RailsSqlViews::ConnectionAdapters::AbstractAdapter","RailsSqlViews/ConnectionAdapters/AbstractAdapter.html#method-c-included","(base)",""],["included","RailsSqlViews::ConnectionAdapters::Mysql2Adapter","RailsSqlViews/ConnectionAdapters/Mysql2Adapter.html#method-c-included","(base)",""],["included","RailsSqlViews::ConnectionAdapters::MysqlAdapter","RailsSqlViews/ConnectionAdapters/MysqlAdapter.html#method-c-included","(base)",""],["included","RailsSqlViews::ConnectionAdapters::PostgreSQLAdapter","RailsSqlViews/ConnectionAdapters/PostgreSQLAdapter.html#method-c-included","(base)",""],["included","RailsSqlViews::ConnectionAdapters::SchemaStatements","RailsSqlViews/ConnectionAdapters/SchemaStatements.html#method-c-included","(base)",""],["included","RailsSqlViews::SchemaDumper","RailsSqlViews/SchemaDumper.html#method-c-included","(base)",""],["inherited","Object","Object.html#method-c-inherited","(sub)",""],["load_extensions","RailsSqlViews::Loader","RailsSqlViews/Loader.html#method-c-load_extensions","()",""],["map_column","RailsSqlViews::ConnectionAdapters::MappingDefinition","RailsSqlViews/ConnectionAdapters/MappingDefinition.html#method-i-map_column","(old_name, new_name)","<p>Create a mapping from an old column name to a new one. If the new name is\nnil, specify that the old column …\n"],["new","RailsSqlViews::ConnectionAdapters::MappingDefinition","RailsSqlViews/ConnectionAdapters/MappingDefinition.html#method-c-new","(columns)","<p>Generates a hash of the form :old_column =&gt; :new_column Initially, it’ll\nmap column names to themselves. …\n"],["new","RailsSqlViews::ConnectionAdapters::ViewDefinition","RailsSqlViews/ConnectionAdapters/ViewDefinition.html#method-c-new","(base, select_query)",""],["nonview_tables","RailsSqlViews::ConnectionAdapters::PostgreSQLAdapter","RailsSqlViews/ConnectionAdapters/PostgreSQLAdapter.html#method-i-nonview_tables","(name = nil)",""],["nonview_tables","RailsSqlViews::ConnectionAdapters::SQLServerAdapter","RailsSqlViews/ConnectionAdapters/SQLServerAdapter.html#method-i-nonview_tables","(name = nil)",""],["nonview_tables","RailsSqlViews::ConnectionAdapters::SQLiteAdapter","RailsSqlViews/ConnectionAdapters/SQLiteAdapter.html#method-i-nonview_tables","(name = nil)",""],["readonly?","ActiveRecord::View","ActiveRecord/View.html#method-i-readonly-3F","()",""],["select_cols","RailsSqlViews::ConnectionAdapters::MappingDefinition","RailsSqlViews/ConnectionAdapters/MappingDefinition.html#method-i-select_cols","()",""],["setup","SchemaDumperTest","SchemaDumperTest.html#method-i-setup","()",""],["setup","ViewModelTest","ViewModelTest.html#method-i-setup","()",""],["structure_dump","RailsSqlViews::ConnectionAdapters::Mysql2Adapter","RailsSqlViews/ConnectionAdapters/Mysql2Adapter.html#method-i-structure_dump","()",""],["structure_dump","RailsSqlViews::ConnectionAdapters::MysqlAdapter","RailsSqlViews/ConnectionAdapters/MysqlAdapter.html#method-i-structure_dump","()",""],["supports_drop_table_cascade?","RailsSqlViews::ConnectionAdapters::AbstractAdapter","RailsSqlViews/ConnectionAdapters/AbstractAdapter.html#method-i-supports_drop_table_cascade-3F","()","<p>Subclasses should override and return false if they don’t support CASCADE\n"],["supports_drop_table_cascade?","RailsSqlViews::ConnectionAdapters::SQLiteAdapter","RailsSqlViews/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_drop_table_cascade-3F","()",""],["supports_view_columns_definition?","RailsSqlViews::ConnectionAdapters::AbstractAdapter","RailsSqlViews/ConnectionAdapters/AbstractAdapter.html#method-i-supports_view_columns_definition-3F","()",""],["supports_view_columns_definition?","RailsSqlViews::ConnectionAdapters::SQLiteAdapter","RailsSqlViews/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_view_columns_definition-3F","()",""],["supports_views?","RailsSqlViews::ConnectionAdapters::AbstractAdapter","RailsSqlViews/ConnectionAdapters/AbstractAdapter.html#method-i-supports_views-3F","()","<p>Subclasses should override and return true if they support views.\n"],["supports_views?","RailsSqlViews::ConnectionAdapters::Mysql2Adapter","RailsSqlViews/ConnectionAdapters/Mysql2Adapter.html#method-i-supports_views-3F","()","<p>Returns true as this adapter supports views.\n"],["supports_views?","RailsSqlViews::ConnectionAdapters::MysqlAdapter","RailsSqlViews/ConnectionAdapters/MysqlAdapter.html#method-i-supports_views-3F","()","<p>Returns true as this adapter supports views.\n"],["supports_views?","RailsSqlViews::ConnectionAdapters::OciAdapter","RailsSqlViews/ConnectionAdapters/OciAdapter.html#method-i-supports_views-3F","()","<p>Returns true as this adapter supports views.\n"],["supports_views?","RailsSqlViews::ConnectionAdapters::OracleAdapter","RailsSqlViews/ConnectionAdapters/OracleAdapter.html#method-i-supports_views-3F","()","<p>Returns true as this adapter supports views.\n"],["supports_views?","RailsSqlViews::ConnectionAdapters::OracleEnhancedAdapter","RailsSqlViews/ConnectionAdapters/OracleEnhancedAdapter.html#method-i-supports_views-3F","()","<p>Returns true as this adapter supports views.\n"],["supports_views?","RailsSqlViews::ConnectionAdapters::PostgreSQLAdapter","RailsSqlViews/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_views-3F","()","<p>Returns true as this adapter supports views.\n"],["supports_views?","RailsSqlViews::ConnectionAdapters::SQLServerAdapter","RailsSqlViews/ConnectionAdapters/SQLServerAdapter.html#method-i-supports_views-3F","()","<p>Returns true as this adapter supports views.\n"],["supports_views?","RailsSqlViews::ConnectionAdapters::SQLiteAdapter","RailsSqlViews/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_views-3F","()",""],["tables_with_views_excluded","RailsSqlViews::SchemaDumper","RailsSqlViews/SchemaDumper.html#method-i-tables_with_views_excluded","(stream)",""],["tables_with_views_included","RailsSqlViews::ConnectionAdapters::Mysql2Adapter","RailsSqlViews/ConnectionAdapters/Mysql2Adapter.html#method-i-tables_with_views_included","(name = nil)",""],["tables_with_views_included","RailsSqlViews::ConnectionAdapters::MysqlAdapter","RailsSqlViews/ConnectionAdapters/MysqlAdapter.html#method-i-tables_with_views_included","(name = nil)",""],["tables_with_views_included","RailsSqlViews::ConnectionAdapters::PostgreSQLAdapter","RailsSqlViews/ConnectionAdapters/PostgreSQLAdapter.html#method-i-tables_with_views_included","(name = nil)",""],["teardown","SchemaDumperTest","SchemaDumperTest.html#method-i-teardown","()",""],["test_access_cloned_belongs_to_association","ViewModelTest","ViewModelTest.html#method-i-test_access_cloned_belongs_to_association","()",""],["test_access_cloned_habtm_association","ViewModelTest","ViewModelTest.html#method-i-test_access_cloned_habtm_association","()",""],["test_access_cloned_has_many_association","ViewModelTest","ViewModelTest.html#method-i-test_access_cloned_has_many_association","()",""],["test_base_tables","AdapterTest","AdapterTest.html#method-i-test_base_tables","()",""],["test_cloned_belongs_to_association_exists","ViewModelTest","ViewModelTest.html#method-i-test_cloned_belongs_to_association_exists","()",""],["test_cloned_habtm_association_exists","ViewModelTest","ViewModelTest.html#method-i-test_cloned_habtm_association_exists","()",""],["test_cloned_has_many_association_exists","ViewModelTest","ViewModelTest.html#method-i-test_cloned_has_many_association_exists","()",""],["test_columns","AdapterTest","AdapterTest.html#method-i-test_columns","()",""],["test_create_view","ViewOperationsTest","ViewOperationsTest.html#method-i-test_create_view","()",""],["test_current_database","AdapterTest","AdapterTest.html#method-i-test_current_database","()",""],["test_drop_view","ViewOperationsTest","ViewOperationsTest.html#method-i-test_drop_view","()",""],["test_dump_and_load","SchemaDumperTest","SchemaDumperTest.html#method-i-test_dump_and_load","()",""],["test_logging_error","SchemaDumperTest","SchemaDumperTest.html#method-i-test_logging_error","()",""],["test_mapped_columns","AdapterTest","AdapterTest.html#method-i-test_mapped_columns","()",""],["test_mapped_views","AdapterTest","AdapterTest.html#method-i-test_mapped_views","()",""],["test_no_view_raises_error","ViewOperationsTest","ViewOperationsTest.html#method-i-test_no_view_raises_error","()",""],["test_non_allowed_object_raises_error","SchemaDumperTest","SchemaDumperTest.html#method-i-test_non_allowed_object_raises_error","()",""],["test_old_name_not_found_error_during_mapping","AdapterTest","AdapterTest.html#method-i-test_old_name_not_found_error_during_mapping","()",""],["test_regex_ignore","SchemaDumperTest","SchemaDumperTest.html#method-i-test_regex_ignore","()",""],["test_same_person","ViewModelTest","ViewModelTest.html#method-i-test_same_person","()",""],["test_supports_views","AdapterTest","AdapterTest.html#method-i-test_supports_views","()",""],["test_symbol_ignore","SchemaDumperTest","SchemaDumperTest.html#method-i-test_symbol_ignore","()",""],["test_tables","AdapterTest","AdapterTest.html#method-i-test_tables","()",""],["test_union","SchemaDumperTest","SchemaDumperTest.html#method-i-test_union","()",""],["test_view","SchemaDumperTest","SchemaDumperTest.html#method-i-test_view","()",""],["test_view_creation_order","SchemaDumperTest","SchemaDumperTest.html#method-i-test_view_creation_order","()",""],["test_view_select_statement","AdapterTest","AdapterTest.html#method-i-test_view_select_statement","()",""],["test_views","AdapterTest","AdapterTest.html#method-i-test_views","()",""],["to_sql","RailsSqlViews::ConnectionAdapters::ViewDefinition","RailsSqlViews/ConnectionAdapters/ViewDefinition.html#method-i-to_sql","()",""],["trailer_with_views","RailsSqlViews::SchemaDumper","RailsSqlViews/SchemaDumper.html#method-i-trailer_with_views","(stream)",""],["view","RailsSqlViews::SchemaDumper","RailsSqlViews/SchemaDumper.html#method-i-view","(view, stream)","<p>Add the specified view to the stream\n"],["view_cols","RailsSqlViews::ConnectionAdapters::MappingDefinition","RailsSqlViews/ConnectionAdapters/MappingDefinition.html#method-i-view_cols","()",""],["view_select_statement","RailsSqlViews::ConnectionAdapters::AbstractAdapter","RailsSqlViews/ConnectionAdapters/AbstractAdapter.html#method-i-view_select_statement","(view, name=nil)","<p>Get the select statement for the specified view\n"],["view_select_statement","RailsSqlViews::ConnectionAdapters::Mysql2Adapter","RailsSqlViews/ConnectionAdapters/Mysql2Adapter.html#method-i-view_select_statement","(view, name=nil)","<p>Get the view select statement for the specified table.\n"],["view_select_statement","RailsSqlViews::ConnectionAdapters::MysqlAdapter","RailsSqlViews/ConnectionAdapters/MysqlAdapter.html#method-i-view_select_statement","(view, name=nil)","<p>Get the view select statement for the specified table.\n"],["view_select_statement","RailsSqlViews::ConnectionAdapters::OciAdapter","RailsSqlViews/ConnectionAdapters/OciAdapter.html#method-i-view_select_statement","(view, name=nil)","<p>Get the view select statement for the specified table.\n"],["view_select_statement","RailsSqlViews::ConnectionAdapters::OracleAdapter","RailsSqlViews/ConnectionAdapters/OracleAdapter.html#method-i-view_select_statement","(view, name=nil)","<p>Get the view select statement for the specified table.\n"],["view_select_statement","RailsSqlViews::ConnectionAdapters::OracleEnhancedAdapter","RailsSqlViews/ConnectionAdapters/OracleEnhancedAdapter.html#method-i-view_select_statement","(view, name=nil)","<p>Get the view select statement for the specified table.\n"],["view_select_statement","RailsSqlViews::ConnectionAdapters::PostgreSQLAdapter","RailsSqlViews/ConnectionAdapters/PostgreSQLAdapter.html#method-i-view_select_statement","(view, name = nil)",""],["view_select_statement","RailsSqlViews::ConnectionAdapters::SQLServerAdapter","RailsSqlViews/ConnectionAdapters/SQLServerAdapter.html#method-i-view_select_statement","(view, name=nil)","<p>Get the view select statement for the specified view.\n"],["view_select_statement","RailsSqlViews::ConnectionAdapters::SQLiteAdapter","RailsSqlViews/ConnectionAdapters/SQLiteAdapter.html#method-i-view_select_statement","(view, name = nil)","<p>Get the view select statement for the specified table.\n"],["views","RailsSqlViews::ConnectionAdapters::AbstractAdapter","RailsSqlViews/ConnectionAdapters/AbstractAdapter.html#method-i-views","(name = nil)","<p>Get a list of all views for the current database\n"],["views","RailsSqlViews::ConnectionAdapters::SQLServerAdapter","RailsSqlViews/ConnectionAdapters/SQLServerAdapter.html#method-i-views","(name = nil)","<p>Returns all the view names from the currently connected schema.\n"],["views","RailsSqlViews::ConnectionAdapters::SQLiteAdapter","RailsSqlViews/ConnectionAdapters/SQLiteAdapter.html#method-i-views","(name = nil)",""],["views","RailsSqlViews::SchemaDumper","RailsSqlViews/SchemaDumper.html#method-i-views","(stream)","<p>Add views to the stream\n"],["CHANGELOG","","CHANGELOG.html","","<p>0.1.0 - Released Dec 27, 2006\n\n<pre>* Initial release</pre>\n<p>0.5.0 - Released Dec 29, 2006\n"],["LICENSE","","LICENSE.html","","<p>Copyright © 2006-2008 Anthony Eden\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n"],["README","","README.html","","<p>Based on Rails SQL Views\n<p>Library which adds SQL Views to Rails. Adds create_view and drop_view to\nthe …\n"],["Rakefile","","Rakefile.html","","<p>require ‘rake’ require ‘rake/testtask’ require ‘rake/rdoctask’ require\n‘rake/packagetask’ require ‘rake/gempackagetask …\n"],["TODO","","TODO.html","","<p>Use pre-existing Adapter#supports_views? where possible\n\n"]]}}